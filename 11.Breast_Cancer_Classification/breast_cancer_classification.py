# -*- coding: utf-8 -*-
"""Breast Cancer Classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/150L4Z00LwnPvZjYhA0xG0YqK06cSzc3B
"""

import numpy as np
import pandas as pd
import sklearn.datasets
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

breast_cancer_dataset = sklearn.datasets.load_breast_cancer()

print(breast_cancer_dataset)

data_frame = pd.DataFrame(breast_cancer_dataset.data, columns=breast_cancer_dataset.feature_names)

data_frame.head()

data_frame.shape

data_frame['label'] = breast_cancer_dataset.target

data_frame.head()

"""
**0 --> Malignant**

**1 --> Benign**"""

data_frame['label'].value_counts()

#data_frame.to_csv('dataset.csv')

X = data_frame.drop(columns='label',axis=1)
Y = data_frame['label']

X = np.asarray(X)
Y = np.asarray(Y)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 2, stratify = Y)

print(X.shape, X_train.shape, X_test.shape)

model =  LogisticRegression(max_iter= 10000)

model.fit(X_train,Y_train)
training_data_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(Y_train,training_data_prediction)
print('Training accuracy',round(training_data_accuracy*100,2))

test_data_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(Y_test,test_data_prediction)
print('Test accuracy',round(test_data_accuracy*100,2))

input_data = (14.95,18.77,97.84,689.5,0.08138,0.1167,0.0905,0.03562,0.1744,0.06493,0.422,1.909,3.271,39.43,0.00579,0.04877,0.05303,0.01527,0.03356,0.009368,16.25,25.47,107.1,809.7,0.0997,0.2521,0.25,0.08405,0.2852,0.09218)
input_data_as_numpy_array = np.asarray(input_data)
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)
prediction = model.predict(input_data_reshaped)
print(prediction)

if(prediction[0]==0):
  print('The breast cancer is Malignant')
else:
  print('The breast cancer is Benign')

